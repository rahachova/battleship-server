// Login or create player

export interface IRequestLogin {
  type: "reg";
  data: {
    name: string;
    password: string;
  };
  id: 0;
}

export interface IResponseLogin {
  type: "reg";
  data: {
    name: string;
    index: number | string;
    error: boolean;
    errorText: string;
  };
  id: 0;
}

// Update winners

export interface IResponseUpdateWinner {
  type: "update_winners";
  data: [
    {
      name: string;
      wins: number;
    },
  ];
  id: 0;
}

// Create new room

export interface IRequestCreateRoom {
  type: "create_room";
  data: "";
  id: 0;
}

// Add user to room

export interface IRequestAddUserToRoom {
  type: "add_user_to_room";
  data: {
    indexRoom: number | string;
  };
  id: 0;
}

// Create game send for both players in the room, after they are connected to the room

export interface IResponseAddUserToRoom {
  type: "create_game";
  data: {
    idGame: number | string;
    idPlayer: number | string; // generated by server id for player in the game session, not enemy (unique id for every player)
  };
  id: 0;
}

// Update room state (send rooms list, where only one player inside)

export interface IResponseUpdateRoomState {
  type: "update_room";
  data: [
    {
      roomId: number | string;
      roomUsers: [
        {
          name: string;
          index: number | string;
        },
      ];
    },
  ];
  id: 0;
}
